{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "projectName": {
        "type": "string",
        "metadata": {
          "description": "Specifies a name for generating resource names."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Specifies the location for all resources."
        }
      },
      "virtualNetworkName": {
        "type": "string",
        "metadata": {
          "Description": "The name of the Virtual Network to Create"
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Specifies a username for the Virtual Machine."
        }
      },
        "dnsLabelPrefix": {
        "type": "string",
        "defaultValue": "[toLower(format('{0}-{1}', parameters('projectName'), uniqueString(resourceGroup().id, parameters('projectName'))))]",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },
        "publicIPAllocationMethod": {
        "type": "string",
        "defaultValue": "Dynamic",
        "allowedValues": [
          "Dynamic",
          "Static"
        ],
        "metadata": {
          "description": "Allocation method for the Public IP used to access the Virtual Machine."
        }
      },
        "publicIpSku": {
        "type": "string",
        "defaultValue": "Basic",
        "allowedValues": [
          "Basic",
          "Standard"
        ],
        "metadata": {
          "description": "SKU for the Public IP used to access the Virtual Machine."
        }
      },
        "publisherName": {
        "type": "string",
        "defaultValue": "Canonical",
        "metadata": {
          "description": "Specifies the offername from Canonical."
          //Get-AzVMImagePublisher -Location $locName | Select PublisherName
        }
      },
      "ubuntuOfferName": {
        "type": "string",
        "defaultValue": "0001-com-ubuntu-minimal-jammy",
        "allowedValues": [
            "0001-com-ubuntu-minimal-bionic",
            "0001-com-ubuntu-minimal-focal",
            "0001-com-ubuntu-minimal-jammy",
            "UbuntuServer"
        ],
        "metadata": {
          "description": "Specifies the offername from Canonical."
          //Get-AzVMImageOffer -Location $locName -PublisherName $pubName | Select Offer
        }
      },
      "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "minimal-22_04-lts-gen2",
      "allowedValues": [
        "12.04.5-LTS",
        "14.04.5-LTS",
        "16.04.0-LTS",
        "18_04-lts-gen2",
        "19_04-gen2",
        "minimal-22_04-lts-gen2"
      ],
      "metadata": {
        "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
        //Get-AzVMImageSku -Location $locName -PublisherName $pubName -Offer $offerName | Select Skus
      }
    },
      "adminPublicKey": {
        "type": "string",
        "metadata": {
          "description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_D2s_v3",
        "metadata": {
          "description": "description"
        }
      }
    },
    "variables": {
      //"vNetName": "[concat(parameters('projectName'), '-vnet')]",
      "vNetAddressPrefixes": "10.0.0.0/16",
      "vNetSubnetName": "default",
      "vNetSubnetAddressPrefix": "10.0.0.0/24",
      "vmName": "[concat(parameters('projectName'), '-vm')]",
      "publicIPAddressName": "[concat(parameters('projectName'), '-ip')]",
      "networkInterfaceName": "[concat(parameters('projectName'), '-nic')]",
      "networkSecurityGroupName": "[concat(parameters('projectName'), '-nsg')]",
      "networkSecurityGroupName2": "[concat(variables('vNetSubnetName'), '-nsg')]",
      "osDiskType": "Standard_LRS",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
        "publicKeys": [
            {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPublicKey')]"
            }
        ]
        }
    }
    },
    "resources": [
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-05-01",
        "name": "[variables('networkSecurityGroupName')]",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "ssh_rule",
              "properties": {
                "description": "Locks inbound down to ssh default port 22.",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 123,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-05-01",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "properties": {
          "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsLabelPrefix')]"
          }
        },
        "sku": {
          "name": "[parameters('publicIpSku')]"
        }
      },
      {
        "comments": "Simple Network Security Group for subnet [variables('vNetSubnetName')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-05-01",
        "name": "[variables('networkSecurityGroupName2')]",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-22",
              "properties": {
                "priority": 1000,
                "access": "Allow",
                "direction": "Inbound",
                "destinationPortRange": "22",
                "protocol": "Tcp",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-05-01",
        "name": "[parameters('virtualNetworkName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName2'))]"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('vNetAddressPrefixes')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('vNetSubnetName')]",
              "properties": {
                "addressPrefix": "[variables('vNetSubnetAddressPrefix')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName2'))]"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-05-01",
        "name": "[variables('networkInterfaceName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                },
                "subnet": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('vNetSubnetName'))]"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2021-11-01",
        "name": "[variables('vmName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[variables('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "linuxConfiguration":"[variables('linuxConfiguration')]"
          },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "[variables('osDiskType')]"
            }
          },
          "imageReference": {
            "publisher": "[parameters('publisherName')]",
            "offer": "[parameters('ubuntuOfferName')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          }
        },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
              }
            ]
          }
        }
      }
    ]
  }